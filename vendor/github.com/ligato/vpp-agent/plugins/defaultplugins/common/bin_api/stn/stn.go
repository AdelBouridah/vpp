// Code generated by govpp binapi-generator DO NOT EDIT.
// Package stn represents the VPP binary API of the 'stn' VPP module.
// Generated from '/usr/share/vpp/api/stn.api.json'
package stn

import "git.fd.io/govpp.git/api"

// StnAddDelRule represents the VPP binary API message 'stn_add_del_rule'.
//
type StnAddDelRule struct {
	IsIP4     uint8
	IPAddress []byte `struc:"[16]byte"`
	SwIfIndex uint32
	IsAdd     uint8
}

func (*StnAddDelRule) GetMessageName() string {
	return "stn_add_del_rule"
}
func (*StnAddDelRule) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*StnAddDelRule) GetCrcString() string {
	return "4a761a12"
}
func NewStnAddDelRule() api.Message {
	return &StnAddDelRule{}
}

// StnAddDelRuleReply represents the VPP binary API message 'stn_add_del_rule_reply'.
//
type StnAddDelRuleReply struct {
	Retval int32
}

func (*StnAddDelRuleReply) GetMessageName() string {
	return "stn_add_del_rule_reply"
}
func (*StnAddDelRuleReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*StnAddDelRuleReply) GetCrcString() string {
	return "7af79b37"
}
func NewStnAddDelRuleReply() api.Message {
	return &StnAddDelRuleReply{}
}

// StnRulesDump represents the VPP binary API message 'stn_rules_dump'.
//
type StnRulesDump struct {
}

func (*StnRulesDump) GetMessageName() string {
	return "stn_rules_dump"
}
func (*StnRulesDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*StnRulesDump) GetCrcString() string {
	return "e3b863a5"
}
func NewStnRulesDump() api.Message {
	return &StnRulesDump{}
}

// StnRuleDetails represents the VPP binary API message 'stn_rule_details'.
//
type StnRuleDetails struct {
	IsIP4     uint8
	IPAddress []byte `struc:"[16]byte"`
	SwIfIndex uint32
}

func (*StnRuleDetails) GetMessageName() string {
	return "stn_rule_details"
}
func (*StnRuleDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*StnRuleDetails) GetCrcString() string {
	return "af614822"
}
func NewStnRuleDetails() api.Message {
	return &StnRuleDetails{}
}
