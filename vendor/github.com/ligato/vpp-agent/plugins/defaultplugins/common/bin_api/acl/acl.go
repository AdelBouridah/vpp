// Code generated by govpp binapi-generator DO NOT EDIT.
// Package acl represents the VPP binary API of the 'acl' VPP module.
// Generated from '/usr/share/vpp/api/acl.api.json'
package acl

import "git.fd.io/govpp.git/api"

// ACLRule represents the VPP binary API data type 'acl_rule'.
//
type ACLRule struct {
	IsPermit               uint8
	IsIpv6                 uint8
	SrcIPAddr              []byte `struc:"[16]byte"`
	SrcIPPrefixLen         uint8
	DstIPAddr              []byte `struc:"[16]byte"`
	DstIPPrefixLen         uint8
	Proto                  uint8
	SrcportOrIcmptypeFirst uint16
	SrcportOrIcmptypeLast  uint16
	DstportOrIcmpcodeFirst uint16
	DstportOrIcmpcodeLast  uint16
	TCPFlagsMask           uint8
	TCPFlagsValue          uint8
}

func (*ACLRule) GetTypeName() string {
	return "acl_rule"
}
func (*ACLRule) GetCrcString() string {
	return "2715e1c0"
}

// MacipACLRule represents the VPP binary API data type 'macip_acl_rule'.
//
type MacipACLRule struct {
	IsPermit       uint8
	IsIpv6         uint8
	SrcMac         []byte `struc:"[6]byte"`
	SrcMacMask     []byte `struc:"[6]byte"`
	SrcIPAddr      []byte `struc:"[16]byte"`
	SrcIPPrefixLen uint8
}

func (*MacipACLRule) GetTypeName() string {
	return "macip_acl_rule"
}
func (*MacipACLRule) GetCrcString() string {
	return "6723f13e"
}

// ACLPluginGetVersion represents the VPP binary API message 'acl_plugin_get_version'.
//
type ACLPluginGetVersion struct {
}

func (*ACLPluginGetVersion) GetMessageName() string {
	return "acl_plugin_get_version"
}
func (*ACLPluginGetVersion) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLPluginGetVersion) GetCrcString() string {
	return "d7c07748"
}
func NewACLPluginGetVersion() api.Message {
	return &ACLPluginGetVersion{}
}

// ACLPluginGetVersionReply represents the VPP binary API message 'acl_plugin_get_version_reply'.
//
type ACLPluginGetVersionReply struct {
	Major uint32
	Minor uint32
}

func (*ACLPluginGetVersionReply) GetMessageName() string {
	return "acl_plugin_get_version_reply"
}
func (*ACLPluginGetVersionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLPluginGetVersionReply) GetCrcString() string {
	return "43eb59a5"
}
func NewACLPluginGetVersionReply() api.Message {
	return &ACLPluginGetVersionReply{}
}

// ACLPluginControlPing represents the VPP binary API message 'acl_plugin_control_ping'.
//
type ACLPluginControlPing struct {
}

func (*ACLPluginControlPing) GetMessageName() string {
	return "acl_plugin_control_ping"
}
func (*ACLPluginControlPing) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLPluginControlPing) GetCrcString() string {
	return "fc22c86e"
}
func NewACLPluginControlPing() api.Message {
	return &ACLPluginControlPing{}
}

// ACLPluginControlPingReply represents the VPP binary API message 'acl_plugin_control_ping_reply'.
//
type ACLPluginControlPingReply struct {
	Retval      int32
	ClientIndex uint32
	VpePid      uint32
}

func (*ACLPluginControlPingReply) GetMessageName() string {
	return "acl_plugin_control_ping_reply"
}
func (*ACLPluginControlPingReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLPluginControlPingReply) GetCrcString() string {
	return "e07e9231"
}
func NewACLPluginControlPingReply() api.Message {
	return &ACLPluginControlPingReply{}
}

// ACLAddReplace represents the VPP binary API message 'acl_add_replace'.
//
type ACLAddReplace struct {
	ACLIndex uint32
	Tag      []byte `struc:"[64]byte"`
	Count    uint32 `struc:"sizeof=R"`
	R        []ACLRule
}

func (*ACLAddReplace) GetMessageName() string {
	return "acl_add_replace"
}
func (*ACLAddReplace) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLAddReplace) GetCrcString() string {
	return "3c317936"
}
func NewACLAddReplace() api.Message {
	return &ACLAddReplace{}
}

// ACLAddReplaceReply represents the VPP binary API message 'acl_add_replace_reply'.
//
type ACLAddReplaceReply struct {
	ACLIndex uint32
	Retval   int32
}

func (*ACLAddReplaceReply) GetMessageName() string {
	return "acl_add_replace_reply"
}
func (*ACLAddReplaceReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLAddReplaceReply) GetCrcString() string {
	return "a5e6d0cf"
}
func NewACLAddReplaceReply() api.Message {
	return &ACLAddReplaceReply{}
}

// ACLDel represents the VPP binary API message 'acl_del'.
//
type ACLDel struct {
	ACLIndex uint32
}

func (*ACLDel) GetMessageName() string {
	return "acl_del"
}
func (*ACLDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLDel) GetCrcString() string {
	return "82cc30ed"
}
func NewACLDel() api.Message {
	return &ACLDel{}
}

// ACLDelReply represents the VPP binary API message 'acl_del_reply'.
//
type ACLDelReply struct {
	Retval int32
}

func (*ACLDelReply) GetMessageName() string {
	return "acl_del_reply"
}
func (*ACLDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLDelReply) GetCrcString() string {
	return "bbb83d84"
}
func NewACLDelReply() api.Message {
	return &ACLDelReply{}
}

// ACLInterfaceAddDel represents the VPP binary API message 'acl_interface_add_del'.
//
type ACLInterfaceAddDel struct {
	IsAdd     uint8
	IsInput   uint8
	SwIfIndex uint32
	ACLIndex  uint32
}

func (*ACLInterfaceAddDel) GetMessageName() string {
	return "acl_interface_add_del"
}
func (*ACLInterfaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLInterfaceAddDel) GetCrcString() string {
	return "98b53725"
}
func NewACLInterfaceAddDel() api.Message {
	return &ACLInterfaceAddDel{}
}

// ACLInterfaceAddDelReply represents the VPP binary API message 'acl_interface_add_del_reply'.
//
type ACLInterfaceAddDelReply struct {
	Retval int32
}

func (*ACLInterfaceAddDelReply) GetMessageName() string {
	return "acl_interface_add_del_reply"
}
func (*ACLInterfaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLInterfaceAddDelReply) GetCrcString() string {
	return "c1b3c077"
}
func NewACLInterfaceAddDelReply() api.Message {
	return &ACLInterfaceAddDelReply{}
}

// ACLInterfaceSetACLList represents the VPP binary API message 'acl_interface_set_acl_list'.
//
type ACLInterfaceSetACLList struct {
	SwIfIndex uint32
	Count     uint8 `struc:"sizeof=Acls"`
	NInput    uint8
	Acls      []uint32
}

func (*ACLInterfaceSetACLList) GetMessageName() string {
	return "acl_interface_set_acl_list"
}
func (*ACLInterfaceSetACLList) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLInterfaceSetACLList) GetCrcString() string {
	return "7562419c"
}
func NewACLInterfaceSetACLList() api.Message {
	return &ACLInterfaceSetACLList{}
}

// ACLInterfaceSetACLListReply represents the VPP binary API message 'acl_interface_set_acl_list_reply'.
//
type ACLInterfaceSetACLListReply struct {
	Retval int32
}

func (*ACLInterfaceSetACLListReply) GetMessageName() string {
	return "acl_interface_set_acl_list_reply"
}
func (*ACLInterfaceSetACLListReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLInterfaceSetACLListReply) GetCrcString() string {
	return "435ddc2b"
}
func NewACLInterfaceSetACLListReply() api.Message {
	return &ACLInterfaceSetACLListReply{}
}

// ACLDump represents the VPP binary API message 'acl_dump'.
//
type ACLDump struct {
	ACLIndex uint32
}

func (*ACLDump) GetMessageName() string {
	return "acl_dump"
}
func (*ACLDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLDump) GetCrcString() string {
	return "c188156d"
}
func NewACLDump() api.Message {
	return &ACLDump{}
}

// ACLDetails represents the VPP binary API message 'acl_details'.
//
type ACLDetails struct {
	ACLIndex uint32
	Tag      []byte `struc:"[64]byte"`
	Count    uint32 `struc:"sizeof=R"`
	R        []ACLRule
}

func (*ACLDetails) GetMessageName() string {
	return "acl_details"
}
func (*ACLDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLDetails) GetCrcString() string {
	return "1c8916b7"
}
func NewACLDetails() api.Message {
	return &ACLDetails{}
}

// ACLInterfaceListDump represents the VPP binary API message 'acl_interface_list_dump'.
//
type ACLInterfaceListDump struct {
	SwIfIndex uint32
}

func (*ACLInterfaceListDump) GetMessageName() string {
	return "acl_interface_list_dump"
}
func (*ACLInterfaceListDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ACLInterfaceListDump) GetCrcString() string {
	return "adfe84b8"
}
func NewACLInterfaceListDump() api.Message {
	return &ACLInterfaceListDump{}
}

// ACLInterfaceListDetails represents the VPP binary API message 'acl_interface_list_details'.
//
type ACLInterfaceListDetails struct {
	SwIfIndex uint32
	Count     uint8 `struc:"sizeof=Acls"`
	NInput    uint8
	Acls      []uint32
}

func (*ACLInterfaceListDetails) GetMessageName() string {
	return "acl_interface_list_details"
}
func (*ACLInterfaceListDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ACLInterfaceListDetails) GetCrcString() string {
	return "c8150656"
}
func NewACLInterfaceListDetails() api.Message {
	return &ACLInterfaceListDetails{}
}

// MacipACLAdd represents the VPP binary API message 'macip_acl_add'.
//
type MacipACLAdd struct {
	Tag   []byte `struc:"[64]byte"`
	Count uint32 `struc:"sizeof=R"`
	R     []MacipACLRule
}

func (*MacipACLAdd) GetMessageName() string {
	return "macip_acl_add"
}
func (*MacipACLAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLAdd) GetCrcString() string {
	return "33356284"
}
func NewMacipACLAdd() api.Message {
	return &MacipACLAdd{}
}

// MacipACLAddReply represents the VPP binary API message 'macip_acl_add_reply'.
//
type MacipACLAddReply struct {
	ACLIndex uint32
	Retval   int32
}

func (*MacipACLAddReply) GetMessageName() string {
	return "macip_acl_add_reply"
}
func (*MacipACLAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLAddReply) GetCrcString() string {
	return "472edb4c"
}
func NewMacipACLAddReply() api.Message {
	return &MacipACLAddReply{}
}

// MacipACLAddReplace represents the VPP binary API message 'macip_acl_add_replace'.
//
type MacipACLAddReplace struct {
	ACLIndex uint32
	Tag      []byte `struc:"[64]byte"`
	Count    uint32 `struc:"sizeof=R"`
	R        []MacipACLRule
}

func (*MacipACLAddReplace) GetMessageName() string {
	return "macip_acl_add_replace"
}
func (*MacipACLAddReplace) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLAddReplace) GetCrcString() string {
	return "d6f92681"
}
func NewMacipACLAddReplace() api.Message {
	return &MacipACLAddReplace{}
}

// MacipACLAddReplaceReply represents the VPP binary API message 'macip_acl_add_replace_reply'.
//
type MacipACLAddReplaceReply struct {
	ACLIndex uint32
	Retval   int32
}

func (*MacipACLAddReplaceReply) GetMessageName() string {
	return "macip_acl_add_replace_reply"
}
func (*MacipACLAddReplaceReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLAddReplaceReply) GetCrcString() string {
	return "650701c2"
}
func NewMacipACLAddReplaceReply() api.Message {
	return &MacipACLAddReplaceReply{}
}

// MacipACLDel represents the VPP binary API message 'macip_acl_del'.
//
type MacipACLDel struct {
	ACLIndex uint32
}

func (*MacipACLDel) GetMessageName() string {
	return "macip_acl_del"
}
func (*MacipACLDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLDel) GetCrcString() string {
	return "dde1141f"
}
func NewMacipACLDel() api.Message {
	return &MacipACLDel{}
}

// MacipACLDelReply represents the VPP binary API message 'macip_acl_del_reply'.
//
type MacipACLDelReply struct {
	Retval int32
}

func (*MacipACLDelReply) GetMessageName() string {
	return "macip_acl_del_reply"
}
func (*MacipACLDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLDelReply) GetCrcString() string {
	return "eeb60e0f"
}
func NewMacipACLDelReply() api.Message {
	return &MacipACLDelReply{}
}

// MacipACLInterfaceAddDel represents the VPP binary API message 'macip_acl_interface_add_del'.
//
type MacipACLInterfaceAddDel struct {
	IsAdd     uint8
	SwIfIndex uint32
	ACLIndex  uint32
}

func (*MacipACLInterfaceAddDel) GetMessageName() string {
	return "macip_acl_interface_add_del"
}
func (*MacipACLInterfaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLInterfaceAddDel) GetCrcString() string {
	return "03a4fab2"
}
func NewMacipACLInterfaceAddDel() api.Message {
	return &MacipACLInterfaceAddDel{}
}

// MacipACLInterfaceAddDelReply represents the VPP binary API message 'macip_acl_interface_add_del_reply'.
//
type MacipACLInterfaceAddDelReply struct {
	Retval int32
}

func (*MacipACLInterfaceAddDelReply) GetMessageName() string {
	return "macip_acl_interface_add_del_reply"
}
func (*MacipACLInterfaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLInterfaceAddDelReply) GetCrcString() string {
	return "9e9ee485"
}
func NewMacipACLInterfaceAddDelReply() api.Message {
	return &MacipACLInterfaceAddDelReply{}
}

// MacipACLDump represents the VPP binary API message 'macip_acl_dump'.
//
type MacipACLDump struct {
	ACLIndex uint32
}

func (*MacipACLDump) GetMessageName() string {
	return "macip_acl_dump"
}
func (*MacipACLDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLDump) GetCrcString() string {
	return "d38227cb"
}
func NewMacipACLDump() api.Message {
	return &MacipACLDump{}
}

// MacipACLDetails represents the VPP binary API message 'macip_acl_details'.
//
type MacipACLDetails struct {
	ACLIndex uint32
	Tag      []byte `struc:"[64]byte"`
	Count    uint32 `struc:"sizeof=R"`
	R        []MacipACLRule
}

func (*MacipACLDetails) GetMessageName() string {
	return "macip_acl_details"
}
func (*MacipACLDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLDetails) GetCrcString() string {
	return "ee1c50db"
}
func NewMacipACLDetails() api.Message {
	return &MacipACLDetails{}
}

// MacipACLInterfaceGet represents the VPP binary API message 'macip_acl_interface_get'.
//
type MacipACLInterfaceGet struct {
}

func (*MacipACLInterfaceGet) GetMessageName() string {
	return "macip_acl_interface_get"
}
func (*MacipACLInterfaceGet) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLInterfaceGet) GetCrcString() string {
	return "317ce31c"
}
func NewMacipACLInterfaceGet() api.Message {
	return &MacipACLInterfaceGet{}
}

// MacipACLInterfaceGetReply represents the VPP binary API message 'macip_acl_interface_get_reply'.
//
type MacipACLInterfaceGetReply struct {
	Count uint32 `struc:"sizeof=Acls"`
	Acls  []uint32
}

func (*MacipACLInterfaceGetReply) GetMessageName() string {
	return "macip_acl_interface_get_reply"
}
func (*MacipACLInterfaceGetReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLInterfaceGetReply) GetCrcString() string {
	return "6c86a56c"
}
func NewMacipACLInterfaceGetReply() api.Message {
	return &MacipACLInterfaceGetReply{}
}

// MacipACLInterfaceListDump represents the VPP binary API message 'macip_acl_interface_list_dump'.
//
type MacipACLInterfaceListDump struct {
	SwIfIndex uint32
}

func (*MacipACLInterfaceListDump) GetMessageName() string {
	return "macip_acl_interface_list_dump"
}
func (*MacipACLInterfaceListDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MacipACLInterfaceListDump) GetCrcString() string {
	return "10645403"
}
func NewMacipACLInterfaceListDump() api.Message {
	return &MacipACLInterfaceListDump{}
}

// MacipACLInterfaceListDetails represents the VPP binary API message 'macip_acl_interface_list_details'.
//
type MacipACLInterfaceListDetails struct {
	SwIfIndex uint32
	Count     uint8 `struc:"sizeof=Acls"`
	Acls      []uint32
}

func (*MacipACLInterfaceListDetails) GetMessageName() string {
	return "macip_acl_interface_list_details"
}
func (*MacipACLInterfaceListDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MacipACLInterfaceListDetails) GetCrcString() string {
	return "d38dc074"
}
func NewMacipACLInterfaceListDetails() api.Message {
	return &MacipACLInterfaceListDetails{}
}
