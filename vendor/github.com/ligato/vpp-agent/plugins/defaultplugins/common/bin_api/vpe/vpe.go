// Code generated by govpp binapi-generator DO NOT EDIT.
// Package vpe represents the VPP binary API of the 'vpe' VPP module.
// Generated from '/usr/share/vpp/api/vpe.api.json'
package vpe

import "git.fd.io/govpp.git/api"

// ControlPing represents the VPP binary API message 'control_ping'.
//
type ControlPing struct {
}

func (*ControlPing) GetMessageName() string {
	return "control_ping"
}
func (*ControlPing) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ControlPing) GetCrcString() string {
	return "ea1bf4f7"
}
func NewControlPing() api.Message {
	return &ControlPing{}
}

// ControlPingReply represents the VPP binary API message 'control_ping_reply'.
//
type ControlPingReply struct {
	Retval      int32
	ClientIndex uint32
	VpePid      uint32
}

func (*ControlPingReply) GetMessageName() string {
	return "control_ping_reply"
}
func (*ControlPingReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ControlPingReply) GetCrcString() string {
	return "aa016e7b"
}
func NewControlPingReply() api.Message {
	return &ControlPingReply{}
}

// Cli represents the VPP binary API message 'cli'.
//
type Cli struct {
	CmdInShmem uint64
}

func (*Cli) GetMessageName() string {
	return "cli"
}
func (*Cli) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*Cli) GetCrcString() string {
	return "543d8e2e"
}
func NewCli() api.Message {
	return &Cli{}
}

// CliInband represents the VPP binary API message 'cli_inband'.
//
type CliInband struct {
	Length uint32 `struc:"sizeof=Cmd"`
	Cmd    []byte
}

func (*CliInband) GetMessageName() string {
	return "cli_inband"
}
func (*CliInband) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*CliInband) GetCrcString() string {
	return "22345937"
}
func NewCliInband() api.Message {
	return &CliInband{}
}

// CliReply represents the VPP binary API message 'cli_reply'.
//
type CliReply struct {
	Retval       int32
	ReplyInShmem uint64
}

func (*CliReply) GetMessageName() string {
	return "cli_reply"
}
func (*CliReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*CliReply) GetCrcString() string {
	return "594a0b2e"
}
func NewCliReply() api.Message {
	return &CliReply{}
}

// CliInbandReply represents the VPP binary API message 'cli_inband_reply'.
//
type CliInbandReply struct {
	Retval int32
	Length uint32 `struc:"sizeof=Reply"`
	Reply  []byte
}

func (*CliInbandReply) GetMessageName() string {
	return "cli_inband_reply"
}
func (*CliInbandReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*CliInbandReply) GetCrcString() string {
	return "c1835761"
}
func NewCliInbandReply() api.Message {
	return &CliInbandReply{}
}

// GetNodeIndex represents the VPP binary API message 'get_node_index'.
//
type GetNodeIndex struct {
	NodeName []byte `struc:"[64]byte"`
}

func (*GetNodeIndex) GetMessageName() string {
	return "get_node_index"
}
func (*GetNodeIndex) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*GetNodeIndex) GetCrcString() string {
	return "226d3f8c"
}
func NewGetNodeIndex() api.Message {
	return &GetNodeIndex{}
}

// GetNodeIndexReply represents the VPP binary API message 'get_node_index_reply'.
//
type GetNodeIndexReply struct {
	Retval    int32
	NodeIndex uint32
}

func (*GetNodeIndexReply) GetMessageName() string {
	return "get_node_index_reply"
}
func (*GetNodeIndexReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*GetNodeIndexReply) GetCrcString() string {
	return "29116865"
}
func NewGetNodeIndexReply() api.Message {
	return &GetNodeIndexReply{}
}

// AddNodeNext represents the VPP binary API message 'add_node_next'.
//
type AddNodeNext struct {
	NodeName []byte `struc:"[64]byte"`
	NextName []byte `struc:"[64]byte"`
}

func (*AddNodeNext) GetMessageName() string {
	return "add_node_next"
}
func (*AddNodeNext) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AddNodeNext) GetCrcString() string {
	return "e4202993"
}
func NewAddNodeNext() api.Message {
	return &AddNodeNext{}
}

// AddNodeNextReply represents the VPP binary API message 'add_node_next_reply'.
//
type AddNodeNextReply struct {
	Retval    int32
	NextIndex uint32
}

func (*AddNodeNextReply) GetMessageName() string {
	return "add_node_next_reply"
}
func (*AddNodeNextReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AddNodeNextReply) GetCrcString() string {
	return "e89d6eed"
}
func NewAddNodeNextReply() api.Message {
	return &AddNodeNextReply{}
}

// ShowVersion represents the VPP binary API message 'show_version'.
//
type ShowVersion struct {
}

func (*ShowVersion) GetMessageName() string {
	return "show_version"
}
func (*ShowVersion) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ShowVersion) GetCrcString() string {
	return "f18f9480"
}
func NewShowVersion() api.Message {
	return &ShowVersion{}
}

// ShowVersionReply represents the VPP binary API message 'show_version_reply'.
//
type ShowVersionReply struct {
	Retval         int32
	Program        []byte `struc:"[32]byte"`
	Version        []byte `struc:"[32]byte"`
	BuildDate      []byte `struc:"[32]byte"`
	BuildDirectory []byte `struc:"[256]byte"`
}

func (*ShowVersionReply) GetMessageName() string {
	return "show_version_reply"
}
func (*ShowVersionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ShowVersionReply) GetCrcString() string {
	return "83186d9e"
}
func NewShowVersionReply() api.Message {
	return &ShowVersionReply{}
}

// GetNodeGraph represents the VPP binary API message 'get_node_graph'.
//
type GetNodeGraph struct {
}

func (*GetNodeGraph) GetMessageName() string {
	return "get_node_graph"
}
func (*GetNodeGraph) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*GetNodeGraph) GetCrcString() string {
	return "f8636a76"
}
func NewGetNodeGraph() api.Message {
	return &GetNodeGraph{}
}

// GetNodeGraphReply represents the VPP binary API message 'get_node_graph_reply'.
//
type GetNodeGraphReply struct {
	Retval       int32
	ReplyInShmem uint64
}

func (*GetNodeGraphReply) GetMessageName() string {
	return "get_node_graph_reply"
}
func (*GetNodeGraphReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*GetNodeGraphReply) GetCrcString() string {
	return "816d91b6"
}
func NewGetNodeGraphReply() api.Message {
	return &GetNodeGraphReply{}
}

// GetNextIndex represents the VPP binary API message 'get_next_index'.
//
type GetNextIndex struct {
	NodeName []byte `struc:"[64]byte"`
	NextName []byte `struc:"[64]byte"`
}

func (*GetNextIndex) GetMessageName() string {
	return "get_next_index"
}
func (*GetNextIndex) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*GetNextIndex) GetCrcString() string {
	return "52f0e416"
}
func NewGetNextIndex() api.Message {
	return &GetNextIndex{}
}

// GetNextIndexReply represents the VPP binary API message 'get_next_index_reply'.
//
type GetNextIndexReply struct {
	Retval    int32
	NextIndex uint32
}

func (*GetNextIndexReply) GetMessageName() string {
	return "get_next_index_reply"
}
func (*GetNextIndexReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*GetNextIndexReply) GetCrcString() string {
	return "671fbdb1"
}
func NewGetNextIndexReply() api.Message {
	return &GetNextIndexReply{}
}
