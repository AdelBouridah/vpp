// Code generated by govpp binapi-generator DO NOT EDIT.
// Package memif represents the VPP binary API of the 'memif' VPP module.
// Generated from '/usr/share/vpp/api/memif.api.json'
package memif

import "git.fd.io/govpp.git/api"

// MemifSocketFilenameAddDel represents the VPP binary API message 'memif_socket_filename_add_del'.
//
type MemifSocketFilenameAddDel struct {
	IsAdd          uint8
	SocketID       uint32
	SocketFilename []byte `struc:"[128]byte"`
}

func (*MemifSocketFilenameAddDel) GetMessageName() string {
	return "memif_socket_filename_add_del"
}
func (*MemifSocketFilenameAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MemifSocketFilenameAddDel) GetCrcString() string {
	return "148f059a"
}
func NewMemifSocketFilenameAddDel() api.Message {
	return &MemifSocketFilenameAddDel{}
}

// MemifSocketFilenameAddDelReply represents the VPP binary API message 'memif_socket_filename_add_del_reply'.
//
type MemifSocketFilenameAddDelReply struct {
	Retval int32
}

func (*MemifSocketFilenameAddDelReply) GetMessageName() string {
	return "memif_socket_filename_add_del_reply"
}
func (*MemifSocketFilenameAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MemifSocketFilenameAddDelReply) GetCrcString() string {
	return "7dd35a25"
}
func NewMemifSocketFilenameAddDelReply() api.Message {
	return &MemifSocketFilenameAddDelReply{}
}

// MemifCreate represents the VPP binary API message 'memif_create'.
//
type MemifCreate struct {
	Role       uint8
	Mode       uint8
	RxQueues   uint8
	TxQueues   uint8
	ID         uint32
	SocketID   uint32
	Secret     []byte `struc:"[24]byte"`
	RingSize   uint32
	BufferSize uint16
	HwAddr     []byte `struc:"[6]byte"`
}

func (*MemifCreate) GetMessageName() string {
	return "memif_create"
}
func (*MemifCreate) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MemifCreate) GetCrcString() string {
	return "97078084"
}
func NewMemifCreate() api.Message {
	return &MemifCreate{}
}

// MemifCreateReply represents the VPP binary API message 'memif_create_reply'.
//
type MemifCreateReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*MemifCreateReply) GetMessageName() string {
	return "memif_create_reply"
}
func (*MemifCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MemifCreateReply) GetCrcString() string {
	return "93d7498b"
}
func NewMemifCreateReply() api.Message {
	return &MemifCreateReply{}
}

// MemifDelete represents the VPP binary API message 'memif_delete'.
//
type MemifDelete struct {
	SwIfIndex uint32
}

func (*MemifDelete) GetMessageName() string {
	return "memif_delete"
}
func (*MemifDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MemifDelete) GetCrcString() string {
	return "12814e3d"
}
func NewMemifDelete() api.Message {
	return &MemifDelete{}
}

// MemifDeleteReply represents the VPP binary API message 'memif_delete_reply'.
//
type MemifDeleteReply struct {
	Retval int32
}

func (*MemifDeleteReply) GetMessageName() string {
	return "memif_delete_reply"
}
func (*MemifDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MemifDeleteReply) GetCrcString() string {
	return "72c9fa3c"
}
func NewMemifDeleteReply() api.Message {
	return &MemifDeleteReply{}
}

// MemifSocketFilenameDetails represents the VPP binary API message 'memif_socket_filename_details'.
//
type MemifSocketFilenameDetails struct {
	SocketID       uint32
	SocketFilename []byte `struc:"[128]byte"`
}

func (*MemifSocketFilenameDetails) GetMessageName() string {
	return "memif_socket_filename_details"
}
func (*MemifSocketFilenameDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MemifSocketFilenameDetails) GetCrcString() string {
	return "63dd238e"
}
func NewMemifSocketFilenameDetails() api.Message {
	return &MemifSocketFilenameDetails{}
}

// MemifSocketFilenameDump represents the VPP binary API message 'memif_socket_filename_dump'.
//
type MemifSocketFilenameDump struct {
}

func (*MemifSocketFilenameDump) GetMessageName() string {
	return "memif_socket_filename_dump"
}
func (*MemifSocketFilenameDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MemifSocketFilenameDump) GetCrcString() string {
	return "29ee9fa4"
}
func NewMemifSocketFilenameDump() api.Message {
	return &MemifSocketFilenameDump{}
}

// MemifDetails represents the VPP binary API message 'memif_details'.
//
type MemifDetails struct {
	SwIfIndex   uint32
	IfName      []byte `struc:"[64]byte"`
	HwAddr      []byte `struc:"[6]byte"`
	ID          uint32
	Role        uint8
	Mode        uint8
	SocketID    uint32
	RingSize    uint32
	BufferSize  uint16
	AdminUpDown uint8
	LinkUpDown  uint8
}

func (*MemifDetails) GetMessageName() string {
	return "memif_details"
}
func (*MemifDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MemifDetails) GetCrcString() string {
	return "a360424e"
}
func NewMemifDetails() api.Message {
	return &MemifDetails{}
}

// MemifDump represents the VPP binary API message 'memif_dump'.
//
type MemifDump struct {
}

func (*MemifDump) GetMessageName() string {
	return "memif_dump"
}
func (*MemifDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MemifDump) GetCrcString() string {
	return "68d39e95"
}
func NewMemifDump() api.Message {
	return &MemifDump{}
}
