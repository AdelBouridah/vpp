// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: interface.proto

package interfaces

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Interface_Type int32

const (
	Interface_UNDEFINED_TYPE    Interface_Type = 0
	Interface_SUB_INTERFACE     Interface_Type = 1
	Interface_SOFTWARE_LOOPBACK Interface_Type = 2
	Interface_DPDK              Interface_Type = 3
	Interface_MEMIF             Interface_Type = 4
	Interface_TAP               Interface_Type = 5
	Interface_AF_PACKET         Interface_Type = 6
	Interface_VXLAN_TUNNEL      Interface_Type = 7
	Interface_IPSEC_TUNNEL      Interface_Type = 8
)

var Interface_Type_name = map[int32]string{
	0: "UNDEFINED_TYPE",
	1: "SUB_INTERFACE",
	2: "SOFTWARE_LOOPBACK",
	3: "DPDK",
	4: "MEMIF",
	5: "TAP",
	6: "AF_PACKET",
	7: "VXLAN_TUNNEL",
	8: "IPSEC_TUNNEL",
}
var Interface_Type_value = map[string]int32{
	"UNDEFINED_TYPE":    0,
	"SUB_INTERFACE":     1,
	"SOFTWARE_LOOPBACK": 2,
	"DPDK":              3,
	"MEMIF":             4,
	"TAP":               5,
	"AF_PACKET":         6,
	"VXLAN_TUNNEL":      7,
	"IPSEC_TUNNEL":      8,
}

func (x Interface_Type) String() string {
	return proto.EnumName(Interface_Type_name, int32(x))
}
func (Interface_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0, 0}
}

// from vpp/build-root/install-vpp-native/vpp/include/vnet/interface.h
type Interface_RxModeSettings_RxModeType int32

const (
	Interface_RxModeSettings_UNKNOWN   Interface_RxModeSettings_RxModeType = 0
	Interface_RxModeSettings_POLLING   Interface_RxModeSettings_RxModeType = 1
	Interface_RxModeSettings_INTERRUPT Interface_RxModeSettings_RxModeType = 2
	Interface_RxModeSettings_ADAPTIVE  Interface_RxModeSettings_RxModeType = 3
	Interface_RxModeSettings_DEFAULT   Interface_RxModeSettings_RxModeType = 4
)

var Interface_RxModeSettings_RxModeType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POLLING",
	2: "INTERRUPT",
	3: "ADAPTIVE",
	4: "DEFAULT",
}
var Interface_RxModeSettings_RxModeType_value = map[string]int32{
	"UNKNOWN":   0,
	"POLLING":   1,
	"INTERRUPT": 2,
	"ADAPTIVE":  3,
	"DEFAULT":   4,
}

func (x Interface_RxModeSettings_RxModeType) String() string {
	return proto.EnumName(Interface_RxModeSettings_RxModeType_name, int32(x))
}
func (Interface_RxModeSettings_RxModeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0, 1, 0}
}

type MemifLink_MemifMode int32

const (
	MemifLink_ETHERNET    MemifLink_MemifMode = 0
	MemifLink_IP          MemifLink_MemifMode = 1
	MemifLink_PUNT_INJECT MemifLink_MemifMode = 2
)

var MemifLink_MemifMode_name = map[int32]string{
	0: "ETHERNET",
	1: "IP",
	2: "PUNT_INJECT",
}
var MemifLink_MemifMode_value = map[string]int32{
	"ETHERNET":    0,
	"IP":          1,
	"PUNT_INJECT": 2,
}

func (x MemifLink_MemifMode) String() string {
	return proto.EnumName(MemifLink_MemifMode_name, int32(x))
}
func (MemifLink_MemifMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{2, 0}
}

type Interface struct {
	Name                string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                Interface_Type                 `protobuf:"varint,2,opt,name=type,proto3,enum=interfaces.Interface_Type" json:"type,omitempty"`
	Enabled             bool                           `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	PhysAddress         string                         `protobuf:"bytes,4,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	IpAddresses         []string                       `protobuf:"bytes,5,rep,name=ip_addresses,json=ipAddresses" json:"ip_addresses,omitempty"`
	Vrf                 uint32                         `protobuf:"varint,6,opt,name=vrf,proto3" json:"vrf,omitempty"`
	SetDhcpClient       bool                           `protobuf:"varint,7,opt,name=set_dhcp_client,json=setDhcpClient,proto3" json:"set_dhcp_client,omitempty"`
	Mtu                 uint32                         `protobuf:"varint,8,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Unnumbered          *Interface_Unnumbered          `protobuf:"bytes,9,opt,name=unnumbered" json:"unnumbered,omitempty"`
	RxModeSettings      *Interface_RxModeSettings      `protobuf:"bytes,10,opt,name=rx_mode_settings,json=rxModeSettings" json:"rx_mode_settings,omitempty"`
	RxPlacementSettings *Interface_RxPlacementSettings `protobuf:"bytes,11,opt,name=rx_placement_settings,json=rxPlacementSettings" json:"rx_placement_settings,omitempty"`
	// Types that are valid to be assigned to Link:
	//	*Interface_Sub
	//	*Interface_Memif
	//	*Interface_Vxlan
	//	*Interface_Afpacket
	//	*Interface_Tap
	Link                 isInterface_Link `protobuf_oneof:"link"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}
func (*Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0}
}
func (m *Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface.Unmarshal(m, b)
}
func (m *Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface.Marshal(b, m, deterministic)
}
func (dst *Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface.Merge(dst, src)
}
func (m *Interface) XXX_Size() int {
	return xxx_messageInfo_Interface.Size(m)
}
func (m *Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_Interface proto.InternalMessageInfo

type isInterface_Link interface {
	isInterface_Link()
}

type Interface_Sub struct {
	Sub *SubInterface `protobuf:"bytes,100,opt,name=sub,oneof"`
}
type Interface_Memif struct {
	Memif *MemifLink `protobuf:"bytes,101,opt,name=memif,oneof"`
}
type Interface_Vxlan struct {
	Vxlan *VxlanLink `protobuf:"bytes,102,opt,name=vxlan,oneof"`
}
type Interface_Afpacket struct {
	Afpacket *AfpacketLink `protobuf:"bytes,103,opt,name=afpacket,oneof"`
}
type Interface_Tap struct {
	Tap *TapLink `protobuf:"bytes,104,opt,name=tap,oneof"`
}

func (*Interface_Sub) isInterface_Link()      {}
func (*Interface_Memif) isInterface_Link()    {}
func (*Interface_Vxlan) isInterface_Link()    {}
func (*Interface_Afpacket) isInterface_Link() {}
func (*Interface_Tap) isInterface_Link()      {}

func (m *Interface) GetLink() isInterface_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interface) GetType() Interface_Type {
	if m != nil {
		return m.Type
	}
	return Interface_UNDEFINED_TYPE
}

func (m *Interface) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Interface) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *Interface) GetIpAddresses() []string {
	if m != nil {
		return m.IpAddresses
	}
	return nil
}

func (m *Interface) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *Interface) GetSetDhcpClient() bool {
	if m != nil {
		return m.SetDhcpClient
	}
	return false
}

func (m *Interface) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Interface) GetUnnumbered() *Interface_Unnumbered {
	if m != nil {
		return m.Unnumbered
	}
	return nil
}

func (m *Interface) GetRxModeSettings() *Interface_RxModeSettings {
	if m != nil {
		return m.RxModeSettings
	}
	return nil
}

func (m *Interface) GetRxPlacementSettings() *Interface_RxPlacementSettings {
	if m != nil {
		return m.RxPlacementSettings
	}
	return nil
}

func (m *Interface) GetSub() *SubInterface {
	if x, ok := m.GetLink().(*Interface_Sub); ok {
		return x.Sub
	}
	return nil
}

func (m *Interface) GetMemif() *MemifLink {
	if x, ok := m.GetLink().(*Interface_Memif); ok {
		return x.Memif
	}
	return nil
}

func (m *Interface) GetVxlan() *VxlanLink {
	if x, ok := m.GetLink().(*Interface_Vxlan); ok {
		return x.Vxlan
	}
	return nil
}

func (m *Interface) GetAfpacket() *AfpacketLink {
	if x, ok := m.GetLink().(*Interface_Afpacket); ok {
		return x.Afpacket
	}
	return nil
}

func (m *Interface) GetTap() *TapLink {
	if x, ok := m.GetLink().(*Interface_Tap); ok {
		return x.Tap
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Interface) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Interface_OneofMarshaler, _Interface_OneofUnmarshaler, _Interface_OneofSizer, []interface{}{
		(*Interface_Sub)(nil),
		(*Interface_Memif)(nil),
		(*Interface_Vxlan)(nil),
		(*Interface_Afpacket)(nil),
		(*Interface_Tap)(nil),
	}
}

func _Interface_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Interface)
	// link
	switch x := m.Link.(type) {
	case *Interface_Sub:
		_ = b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sub); err != nil {
			return err
		}
	case *Interface_Memif:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Memif); err != nil {
			return err
		}
	case *Interface_Vxlan:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vxlan); err != nil {
			return err
		}
	case *Interface_Afpacket:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Afpacket); err != nil {
			return err
		}
	case *Interface_Tap:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tap); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Interface.Link has unexpected type %T", x)
	}
	return nil
}

func _Interface_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Interface)
	switch tag {
	case 100: // link.sub
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubInterface)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Sub{msg}
		return true, err
	case 101: // link.memif
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MemifLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Memif{msg}
		return true, err
	case 102: // link.vxlan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VxlanLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Vxlan{msg}
		return true, err
	case 103: // link.afpacket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AfpacketLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Afpacket{msg}
		return true, err
	case 104: // link.tap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Tap{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Interface_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Interface)
	// link
	switch x := m.Link.(type) {
	case *Interface_Sub:
		s := proto.Size(x.Sub)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Interface_Memif:
		s := proto.Size(x.Memif)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Interface_Vxlan:
		s := proto.Size(x.Vxlan)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Interface_Afpacket:
		s := proto.Size(x.Afpacket)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Interface_Tap:
		s := proto.Size(x.Tap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Interface_Unnumbered struct {
	InterfaceWithIp      string   `protobuf:"bytes,1,opt,name=interface_with_ip,json=interfaceWithIp,proto3" json:"interface_with_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interface_Unnumbered) Reset()         { *m = Interface_Unnumbered{} }
func (m *Interface_Unnumbered) String() string { return proto.CompactTextString(m) }
func (*Interface_Unnumbered) ProtoMessage()    {}
func (*Interface_Unnumbered) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0, 0}
}
func (m *Interface_Unnumbered) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface_Unnumbered.Unmarshal(m, b)
}
func (m *Interface_Unnumbered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface_Unnumbered.Marshal(b, m, deterministic)
}
func (dst *Interface_Unnumbered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface_Unnumbered.Merge(dst, src)
}
func (m *Interface_Unnumbered) XXX_Size() int {
	return xxx_messageInfo_Interface_Unnumbered.Size(m)
}
func (m *Interface_Unnumbered) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface_Unnumbered.DiscardUnknown(m)
}

var xxx_messageInfo_Interface_Unnumbered proto.InternalMessageInfo

func (m *Interface_Unnumbered) GetInterfaceWithIp() string {
	if m != nil {
		return m.InterfaceWithIp
	}
	return ""
}

type Interface_RxModeSettings struct {
	RxMode               Interface_RxModeSettings_RxModeType `protobuf:"varint,1,opt,name=rx_mode,json=rxMode,proto3,enum=interfaces.Interface_RxModeSettings_RxModeType" json:"rx_mode,omitempty"`
	QueueId              uint32                              `protobuf:"varint,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	QueueIdValid         uint32                              `protobuf:"varint,3,opt,name=queue_id_valid,json=queueIdValid,proto3" json:"queue_id_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Interface_RxModeSettings) Reset()         { *m = Interface_RxModeSettings{} }
func (m *Interface_RxModeSettings) String() string { return proto.CompactTextString(m) }
func (*Interface_RxModeSettings) ProtoMessage()    {}
func (*Interface_RxModeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0, 1}
}
func (m *Interface_RxModeSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface_RxModeSettings.Unmarshal(m, b)
}
func (m *Interface_RxModeSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface_RxModeSettings.Marshal(b, m, deterministic)
}
func (dst *Interface_RxModeSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface_RxModeSettings.Merge(dst, src)
}
func (m *Interface_RxModeSettings) XXX_Size() int {
	return xxx_messageInfo_Interface_RxModeSettings.Size(m)
}
func (m *Interface_RxModeSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface_RxModeSettings.DiscardUnknown(m)
}

var xxx_messageInfo_Interface_RxModeSettings proto.InternalMessageInfo

func (m *Interface_RxModeSettings) GetRxMode() Interface_RxModeSettings_RxModeType {
	if m != nil {
		return m.RxMode
	}
	return Interface_RxModeSettings_UNKNOWN
}

func (m *Interface_RxModeSettings) GetQueueId() uint32 {
	if m != nil {
		return m.QueueId
	}
	return 0
}

func (m *Interface_RxModeSettings) GetQueueIdValid() uint32 {
	if m != nil {
		return m.QueueIdValid
	}
	return 0
}

type Interface_RxPlacementSettings struct {
	Queue                uint32   `protobuf:"varint,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Worker               uint32   `protobuf:"varint,2,opt,name=worker,proto3" json:"worker,omitempty"`
	IsMain               bool     `protobuf:"varint,3,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interface_RxPlacementSettings) Reset()         { *m = Interface_RxPlacementSettings{} }
func (m *Interface_RxPlacementSettings) String() string { return proto.CompactTextString(m) }
func (*Interface_RxPlacementSettings) ProtoMessage()    {}
func (*Interface_RxPlacementSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{0, 2}
}
func (m *Interface_RxPlacementSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface_RxPlacementSettings.Unmarshal(m, b)
}
func (m *Interface_RxPlacementSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface_RxPlacementSettings.Marshal(b, m, deterministic)
}
func (dst *Interface_RxPlacementSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface_RxPlacementSettings.Merge(dst, src)
}
func (m *Interface_RxPlacementSettings) XXX_Size() int {
	return xxx_messageInfo_Interface_RxPlacementSettings.Size(m)
}
func (m *Interface_RxPlacementSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface_RxPlacementSettings.DiscardUnknown(m)
}

var xxx_messageInfo_Interface_RxPlacementSettings proto.InternalMessageInfo

func (m *Interface_RxPlacementSettings) GetQueue() uint32 {
	if m != nil {
		return m.Queue
	}
	return 0
}

func (m *Interface_RxPlacementSettings) GetWorker() uint32 {
	if m != nil {
		return m.Worker
	}
	return 0
}

func (m *Interface_RxPlacementSettings) GetIsMain() bool {
	if m != nil {
		return m.IsMain
	}
	return false
}

type SubInterface struct {
	ParentName           string   `protobuf:"bytes,1,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`
	SubId                uint32   `protobuf:"varint,2,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubInterface) Reset()         { *m = SubInterface{} }
func (m *SubInterface) String() string { return proto.CompactTextString(m) }
func (*SubInterface) ProtoMessage()    {}
func (*SubInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{1}
}
func (m *SubInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubInterface.Unmarshal(m, b)
}
func (m *SubInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubInterface.Marshal(b, m, deterministic)
}
func (dst *SubInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubInterface.Merge(dst, src)
}
func (m *SubInterface) XXX_Size() int {
	return xxx_messageInfo_SubInterface.Size(m)
}
func (m *SubInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_SubInterface.DiscardUnknown(m)
}

var xxx_messageInfo_SubInterface proto.InternalMessageInfo

func (m *SubInterface) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *SubInterface) GetSubId() uint32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

type MemifLink struct {
	Master               bool                `protobuf:"varint,1,opt,name=master,proto3" json:"master,omitempty"`
	Mode                 MemifLink_MemifMode `protobuf:"varint,2,opt,name=mode,proto3,enum=interfaces.MemifLink_MemifMode" json:"mode,omitempty"`
	Id                   uint32              `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	SocketFilename       string              `protobuf:"bytes,4,opt,name=socket_filename,json=socketFilename,proto3" json:"socket_filename,omitempty"`
	Secret               string              `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	RingSize             uint32              `protobuf:"varint,6,opt,name=ring_size,json=ringSize,proto3" json:"ring_size,omitempty"`
	BufferSize           uint32              `protobuf:"varint,7,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	RxQueues             uint32              `protobuf:"varint,8,opt,name=rx_queues,json=rxQueues,proto3" json:"rx_queues,omitempty"`
	TxQueues             uint32              `protobuf:"varint,9,opt,name=tx_queues,json=txQueues,proto3" json:"tx_queues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MemifLink) Reset()         { *m = MemifLink{} }
func (m *MemifLink) String() string { return proto.CompactTextString(m) }
func (*MemifLink) ProtoMessage()    {}
func (*MemifLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{2}
}
func (m *MemifLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemifLink.Unmarshal(m, b)
}
func (m *MemifLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemifLink.Marshal(b, m, deterministic)
}
func (dst *MemifLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemifLink.Merge(dst, src)
}
func (m *MemifLink) XXX_Size() int {
	return xxx_messageInfo_MemifLink.Size(m)
}
func (m *MemifLink) XXX_DiscardUnknown() {
	xxx_messageInfo_MemifLink.DiscardUnknown(m)
}

var xxx_messageInfo_MemifLink proto.InternalMessageInfo

func (m *MemifLink) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

func (m *MemifLink) GetMode() MemifLink_MemifMode {
	if m != nil {
		return m.Mode
	}
	return MemifLink_ETHERNET
}

func (m *MemifLink) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MemifLink) GetSocketFilename() string {
	if m != nil {
		return m.SocketFilename
	}
	return ""
}

func (m *MemifLink) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *MemifLink) GetRingSize() uint32 {
	if m != nil {
		return m.RingSize
	}
	return 0
}

func (m *MemifLink) GetBufferSize() uint32 {
	if m != nil {
		return m.BufferSize
	}
	return 0
}

func (m *MemifLink) GetRxQueues() uint32 {
	if m != nil {
		return m.RxQueues
	}
	return 0
}

func (m *MemifLink) GetTxQueues() uint32 {
	if m != nil {
		return m.TxQueues
	}
	return 0
}

type VxlanLink struct {
	SrcAddress           string   `protobuf:"bytes,1,opt,name=src_address,json=srcAddress,proto3" json:"src_address,omitempty"`
	DstAddress           string   `protobuf:"bytes,2,opt,name=dst_address,json=dstAddress,proto3" json:"dst_address,omitempty"`
	Vni                  uint32   `protobuf:"varint,3,opt,name=vni,proto3" json:"vni,omitempty"`
	Multicast            string   `protobuf:"bytes,4,opt,name=multicast,proto3" json:"multicast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VxlanLink) Reset()         { *m = VxlanLink{} }
func (m *VxlanLink) String() string { return proto.CompactTextString(m) }
func (*VxlanLink) ProtoMessage()    {}
func (*VxlanLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{3}
}
func (m *VxlanLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VxlanLink.Unmarshal(m, b)
}
func (m *VxlanLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VxlanLink.Marshal(b, m, deterministic)
}
func (dst *VxlanLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VxlanLink.Merge(dst, src)
}
func (m *VxlanLink) XXX_Size() int {
	return xxx_messageInfo_VxlanLink.Size(m)
}
func (m *VxlanLink) XXX_DiscardUnknown() {
	xxx_messageInfo_VxlanLink.DiscardUnknown(m)
}

var xxx_messageInfo_VxlanLink proto.InternalMessageInfo

func (m *VxlanLink) GetSrcAddress() string {
	if m != nil {
		return m.SrcAddress
	}
	return ""
}

func (m *VxlanLink) GetDstAddress() string {
	if m != nil {
		return m.DstAddress
	}
	return ""
}

func (m *VxlanLink) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *VxlanLink) GetMulticast() string {
	if m != nil {
		return m.Multicast
	}
	return ""
}

type AfpacketLink struct {
	HostIfName           string   `protobuf:"bytes,1,opt,name=host_if_name,json=hostIfName,proto3" json:"host_if_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AfpacketLink) Reset()         { *m = AfpacketLink{} }
func (m *AfpacketLink) String() string { return proto.CompactTextString(m) }
func (*AfpacketLink) ProtoMessage()    {}
func (*AfpacketLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{4}
}
func (m *AfpacketLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AfpacketLink.Unmarshal(m, b)
}
func (m *AfpacketLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AfpacketLink.Marshal(b, m, deterministic)
}
func (dst *AfpacketLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AfpacketLink.Merge(dst, src)
}
func (m *AfpacketLink) XXX_Size() int {
	return xxx_messageInfo_AfpacketLink.Size(m)
}
func (m *AfpacketLink) XXX_DiscardUnknown() {
	xxx_messageInfo_AfpacketLink.DiscardUnknown(m)
}

var xxx_messageInfo_AfpacketLink proto.InternalMessageInfo

func (m *AfpacketLink) GetHostIfName() string {
	if m != nil {
		return m.HostIfName
	}
	return ""
}

type TapLink struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	HostIfName           string   `protobuf:"bytes,2,opt,name=host_if_name,json=hostIfName,proto3" json:"host_if_name,omitempty"`
	ToMicroservice       string   `protobuf:"bytes,3,opt,name=to_microservice,json=toMicroservice,proto3" json:"to_microservice,omitempty"`
	RxRingSize           uint32   `protobuf:"varint,4,opt,name=rx_ring_size,json=rxRingSize,proto3" json:"rx_ring_size,omitempty"`
	TxRingSize           uint32   `protobuf:"varint,5,opt,name=tx_ring_size,json=txRingSize,proto3" json:"tx_ring_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TapLink) Reset()         { *m = TapLink{} }
func (m *TapLink) String() string { return proto.CompactTextString(m) }
func (*TapLink) ProtoMessage()    {}
func (*TapLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_707ff23c7d73ff34, []int{5}
}
func (m *TapLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapLink.Unmarshal(m, b)
}
func (m *TapLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapLink.Marshal(b, m, deterministic)
}
func (dst *TapLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapLink.Merge(dst, src)
}
func (m *TapLink) XXX_Size() int {
	return xxx_messageInfo_TapLink.Size(m)
}
func (m *TapLink) XXX_DiscardUnknown() {
	xxx_messageInfo_TapLink.DiscardUnknown(m)
}

var xxx_messageInfo_TapLink proto.InternalMessageInfo

func (m *TapLink) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TapLink) GetHostIfName() string {
	if m != nil {
		return m.HostIfName
	}
	return ""
}

func (m *TapLink) GetToMicroservice() string {
	if m != nil {
		return m.ToMicroservice
	}
	return ""
}

func (m *TapLink) GetRxRingSize() uint32 {
	if m != nil {
		return m.RxRingSize
	}
	return 0
}

func (m *TapLink) GetTxRingSize() uint32 {
	if m != nil {
		return m.TxRingSize
	}
	return 0
}

func init() {
	proto.RegisterType((*Interface)(nil), "interfaces.Interface")
	proto.RegisterType((*Interface_Unnumbered)(nil), "interfaces.Interface.Unnumbered")
	proto.RegisterType((*Interface_RxModeSettings)(nil), "interfaces.Interface.RxModeSettings")
	proto.RegisterType((*Interface_RxPlacementSettings)(nil), "interfaces.Interface.RxPlacementSettings")
	proto.RegisterType((*SubInterface)(nil), "interfaces.SubInterface")
	proto.RegisterType((*MemifLink)(nil), "interfaces.MemifLink")
	proto.RegisterType((*VxlanLink)(nil), "interfaces.VxlanLink")
	proto.RegisterType((*AfpacketLink)(nil), "interfaces.AfpacketLink")
	proto.RegisterType((*TapLink)(nil), "interfaces.TapLink")
	proto.RegisterEnum("interfaces.Interface_Type", Interface_Type_name, Interface_Type_value)
	proto.RegisterEnum("interfaces.Interface_RxModeSettings_RxModeType", Interface_RxModeSettings_RxModeType_name, Interface_RxModeSettings_RxModeType_value)
	proto.RegisterEnum("interfaces.MemifLink_MemifMode", MemifLink_MemifMode_name, MemifLink_MemifMode_value)
}

func init() { proto.RegisterFile("interface.proto", fileDescriptor_interface_707ff23c7d73ff34) }

var fileDescriptor_interface_707ff23c7d73ff34 = []byte{
	// 1086 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xed, 0x6e, 0xe3, 0x44,
	0x17, 0xae, 0xf3, 0x9d, 0x93, 0x8f, 0x7a, 0x67, 0xdf, 0xbe, 0x98, 0x82, 0xb4, 0x21, 0x5a, 0xb1,
	0x05, 0x41, 0x41, 0x5d, 0x09, 0xf1, 0x13, 0x6f, 0xe2, 0x50, 0xd3, 0xc4, 0x35, 0x8e, 0xd3, 0x05,
	0x09, 0x64, 0x39, 0xf6, 0x64, 0x33, 0x6a, 0xec, 0x98, 0x99, 0x71, 0x37, 0xbb, 0x12, 0x3f, 0xb8,
	0x08, 0x6e, 0x84, 0x7b, 0xe1, 0x32, 0xb8, 0x07, 0x34, 0xe3, 0x8f, 0x64, 0x69, 0x91, 0xf8, 0x37,
	0xe7, 0x39, 0xcf, 0x79, 0x72, 0x3c, 0xe7, 0x63, 0x02, 0xc7, 0x24, 0xe6, 0x98, 0xae, 0xfc, 0x00,
	0x9f, 0x27, 0x74, 0xcb, 0xb7, 0x08, 0x4a, 0x80, 0x0d, 0x7f, 0x03, 0x68, 0x9b, 0x85, 0x89, 0x10,
	0xd4, 0x62, 0x3f, 0xc2, 0x9a, 0x32, 0x50, 0xce, 0xda, 0x8e, 0x3c, 0xa3, 0x73, 0xa8, 0xf1, 0x37,
	0x09, 0xd6, 0x2a, 0x03, 0xe5, 0xac, 0x7f, 0x71, 0x7a, 0xbe, 0x0f, 0x3e, 0x2f, 0x03, 0xcf, 0xdd,
	0x37, 0x09, 0x76, 0x24, 0x0f, 0x69, 0xd0, 0xc4, 0xb1, 0xbf, 0xdc, 0xe0, 0x50, 0xab, 0x0e, 0x94,
	0xb3, 0x96, 0x53, 0x98, 0xe8, 0x23, 0xe8, 0x26, 0xeb, 0x37, 0xcc, 0xf3, 0xc3, 0x90, 0x62, 0xc6,
	0xb4, 0x9a, 0xfc, 0x95, 0x8e, 0xc0, 0xf4, 0x0c, 0x12, 0x14, 0x92, 0x14, 0x04, 0xcc, 0xb4, 0xfa,
	0xa0, 0x2a, 0x28, 0x24, 0xd1, 0x0b, 0x08, 0xa9, 0x50, 0xbd, 0xa3, 0x2b, 0xad, 0x31, 0x50, 0xce,
	0x7a, 0x8e, 0x38, 0xa2, 0x8f, 0xe1, 0x98, 0x61, 0xee, 0x85, 0xeb, 0x20, 0xf1, 0x82, 0x0d, 0xc1,
	0x31, 0xd7, 0x9a, 0xf2, 0x97, 0x7b, 0x0c, 0xf3, 0xf1, 0x3a, 0x48, 0x46, 0x12, 0x14, 0x91, 0x11,
	0x4f, 0xb5, 0x56, 0x16, 0x19, 0xf1, 0x14, 0x7d, 0x03, 0x90, 0xc6, 0x71, 0x1a, 0x2d, 0x31, 0xc5,
	0xa1, 0xd6, 0x1e, 0x28, 0x67, 0x9d, 0x8b, 0xc1, 0xc3, 0x5f, 0xb8, 0x28, 0x79, 0xce, 0x41, 0x0c,
	0xb2, 0x40, 0xa5, 0x3b, 0x2f, 0xda, 0x86, 0xd8, 0x63, 0x98, 0x73, 0x12, 0xbf, 0x62, 0x1a, 0x48,
	0x9d, 0xa7, 0x0f, 0xeb, 0x38, 0xbb, 0xd9, 0x36, 0xc4, 0xf3, 0x9c, 0xeb, 0xf4, 0xe9, 0x3b, 0x36,
	0xfa, 0x19, 0x4e, 0xe8, 0xce, 0x4b, 0x36, 0x7e, 0x80, 0x23, 0x1c, 0xf3, 0xbd, 0x68, 0x47, 0x8a,
	0x7e, 0xf2, 0x6f, 0xa2, 0x76, 0x11, 0x51, 0x2a, 0x3f, 0xa6, 0xf7, 0x41, 0xf4, 0x19, 0x54, 0x59,
	0xba, 0xd4, 0x42, 0x29, 0xa6, 0x1d, 0x8a, 0xcd, 0xd3, 0x65, 0xa9, 0x77, 0x79, 0xe4, 0x08, 0x1a,
	0xfa, 0x1c, 0xea, 0x11, 0x8e, 0xc8, 0x4a, 0xc3, 0x92, 0x7f, 0x72, 0xc8, 0x9f, 0x09, 0xc7, 0x94,
	0xc4, 0xb7, 0x97, 0x47, 0x4e, 0xc6, 0x12, 0xf4, 0xbb, 0xdd, 0xc6, 0x8f, 0xb5, 0xd5, 0x7d, 0xfa,
	0x8d, 0x70, 0x14, 0x74, 0xc9, 0x42, 0x5f, 0x41, 0xcb, 0x5f, 0x25, 0x7e, 0x70, 0x8b, 0xb9, 0xf6,
	0xea, 0x7e, 0x42, 0x7a, 0xee, 0xcb, 0x83, 0x4a, 0x2e, 0x7a, 0x06, 0x55, 0xee, 0x27, 0xda, 0x5a,
	0x86, 0x3c, 0x3e, 0x0c, 0x71, 0xfd, 0x24, 0x67, 0x0b, 0xc6, 0xe9, 0xd7, 0x00, 0xfb, 0xaa, 0xa1,
	0x4f, 0xe1, 0x51, 0x49, 0xf5, 0x5e, 0x13, 0xbe, 0xf6, 0x48, 0x92, 0x37, 0xfa, 0x7e, 0x42, 0x5e,
	0x12, 0xbe, 0x36, 0x93, 0xd3, 0xbf, 0x14, 0xe8, 0xbf, 0x5b, 0x28, 0x74, 0x09, 0xcd, 0xbc, 0xd0,
	0x32, 0xa8, 0x7f, 0xf1, 0xc5, 0x7f, 0xa9, 0x6f, 0x6e, 0xca, 0xf1, 0x68, 0x64, 0xa5, 0x46, 0xef,
	0x43, 0xeb, 0x97, 0x14, 0xa7, 0xd8, 0x23, 0xa1, 0x1c, 0xaa, 0x9e, 0xd3, 0x94, 0xb6, 0x19, 0xa2,
	0xa7, 0xd0, 0x2f, 0x5c, 0xde, 0x9d, 0xbf, 0x21, 0xd9, 0x08, 0xf5, 0x9c, 0x6e, 0x4e, 0xb8, 0x11,
	0xd8, 0xd0, 0x06, 0xd8, 0xcb, 0xa2, 0x0e, 0x34, 0x17, 0xd6, 0x95, 0x75, 0xfd, 0xd2, 0x52, 0x8f,
	0x84, 0x61, 0x5f, 0x4f, 0xa7, 0xa6, 0xf5, 0xad, 0xaa, 0xa0, 0x1e, 0xb4, 0x4d, 0xcb, 0x35, 0x1c,
	0x67, 0x61, 0xbb, 0x6a, 0x05, 0x75, 0xa1, 0xa5, 0x8f, 0x75, 0xdb, 0x35, 0x6f, 0x0c, 0xb5, 0x2a,
	0x98, 0x63, 0x63, 0xa2, 0x2f, 0xa6, 0xae, 0x5a, 0x3b, 0xfd, 0x09, 0x1e, 0x3f, 0xd0, 0x42, 0xe8,
	0x7f, 0x50, 0x97, 0x3f, 0x2c, 0xbf, 0xb8, 0xe7, 0x64, 0x06, 0xfa, 0x3f, 0x34, 0x5e, 0x6f, 0xe9,
	0x2d, 0xa6, 0x79, 0xf6, 0xb9, 0x85, 0xde, 0x83, 0x26, 0x61, 0x5e, 0xe4, 0x93, 0x38, 0x1f, 0xfc,
	0x06, 0x61, 0x33, 0x9f, 0xc4, 0xc3, 0xdf, 0x15, 0xa8, 0xc9, 0x54, 0x11, 0xf4, 0x17, 0xd6, 0xd8,
	0x98, 0x98, 0x96, 0x31, 0xf6, 0xdc, 0x1f, 0x6d, 0x43, 0x3d, 0x42, 0x8f, 0xa0, 0x37, 0x5f, 0xbc,
	0xf0, 0x64, 0xa2, 0x13, 0x7d, 0x64, 0xa8, 0x0a, 0x3a, 0x81, 0x47, 0xf3, 0xeb, 0x89, 0xfb, 0x52,
	0x77, 0x0c, 0x6f, 0x7a, 0x7d, 0x6d, 0xbf, 0xd0, 0x47, 0x57, 0x6a, 0x05, 0xb5, 0xa0, 0x36, 0xb6,
	0xc7, 0x57, 0x6a, 0x15, 0xb5, 0xa1, 0x3e, 0x33, 0x66, 0xe6, 0x44, 0xad, 0xa1, 0x26, 0x54, 0x5d,
	0xdd, 0x56, 0xeb, 0xe2, 0x63, 0xf5, 0x89, 0x67, 0xeb, 0xa3, 0x2b, 0xc3, 0x55, 0x1b, 0x48, 0x85,
	0xee, 0xcd, 0x0f, 0x53, 0xdd, 0xf2, 0xdc, 0x85, 0x65, 0x19, 0x53, 0xb5, 0x29, 0x10, 0xd3, 0x9e,
	0x1b, 0xa3, 0x02, 0x69, 0xbd, 0x68, 0x40, 0x6d, 0x43, 0xe2, 0xdb, 0xe1, 0x04, 0xba, 0x87, 0xdd,
	0x8f, 0x9e, 0x40, 0x27, 0xf1, 0xa9, 0x98, 0xbe, 0x83, 0x65, 0x08, 0x19, 0x64, 0x89, 0x95, 0x78,
	0x02, 0x0d, 0x96, 0x2e, 0xf7, 0xf5, 0xab, 0xb3, 0x74, 0x69, 0x86, 0xc3, 0x3f, 0x2b, 0xd0, 0x2e,
	0xc7, 0x42, 0x5c, 0x53, 0xe4, 0x33, 0x8e, 0xa9, 0x14, 0x68, 0x39, 0xb9, 0x85, 0x9e, 0x43, 0x4d,
	0x76, 0x51, 0xb6, 0x4f, 0x9f, 0x3c, 0x38, 0x53, 0xd9, 0x49, 0x94, 0xd8, 0x91, 0x64, 0xd4, 0x87,
	0x4a, 0xd9, 0x0c, 0x15, 0x12, 0xa2, 0x67, 0x70, 0xcc, 0xb6, 0x62, 0x1a, 0xbc, 0x15, 0xd9, 0x60,
	0x99, 0x66, 0xb6, 0x4d, 0xfb, 0x19, 0x3c, 0xc9, 0x51, 0x91, 0x05, 0xc3, 0x01, 0xc5, 0x5c, 0xab,
	0x4b, 0x7f, 0x6e, 0xa1, 0x0f, 0xa0, 0x4d, 0x49, 0xfc, 0xca, 0x63, 0xe4, 0x2d, 0xce, 0x77, 0x69,
	0x4b, 0x00, 0x73, 0xf2, 0x56, 0x5e, 0xc0, 0x32, 0x5d, 0xad, 0x30, 0xcd, 0xdc, 0x4d, 0xe9, 0x86,
	0x0c, 0x92, 0x04, 0x11, 0xbd, 0xf3, 0x64, 0x3b, 0xb0, 0x7c, 0x9f, 0xb6, 0xe8, 0xee, 0x7b, 0x69,
	0x0b, 0x27, 0x2f, 0x9d, 0xed, 0xcc, 0xc9, 0x73, 0xe7, 0xf0, 0x22, 0xbf, 0x22, 0x39, 0x09, 0x5d,
	0x68, 0x19, 0xee, 0xa5, 0xe1, 0x58, 0x86, 0xab, 0x1e, 0xa1, 0x06, 0x54, 0x4c, 0x5b, 0x55, 0xd0,
	0x31, 0x74, 0xec, 0x85, 0xe5, 0x7a, 0xa6, 0xf5, 0x9d, 0x31, 0x72, 0xd5, 0xca, 0xf0, 0x57, 0x68,
	0x97, 0xeb, 0x43, 0xe4, 0xc6, 0x68, 0x50, 0xbe, 0x21, 0x79, 0x71, 0x18, 0x0d, 0x8a, 0x27, 0xe4,
	0x09, 0x74, 0x42, 0xc6, 0x4b, 0x42, 0x25, 0x23, 0x84, 0x8c, 0x17, 0x04, 0xf1, 0x80, 0xc4, 0x24,
	0xbf, 0x4c, 0x71, 0x44, 0x1f, 0x42, 0x3b, 0x4a, 0x37, 0x9c, 0x04, 0x3e, 0xe3, 0xf9, 0x3d, 0xee,
	0x81, 0xe1, 0x97, 0xd0, 0x3d, 0xdc, 0x45, 0x68, 0x00, 0xdd, 0xf5, 0x96, 0x71, 0x8f, 0xac, 0xde,
	0xe9, 0x0f, 0x81, 0x99, 0x2b, 0xd1, 0x1f, 0xc3, 0x3f, 0x14, 0x68, 0xe6, 0xbb, 0x48, 0x3c, 0x87,
	0x77, 0x98, 0x32, 0xb2, 0x8d, 0xf3, 0x29, 0x2a, 0xcc, 0x7b, 0x3a, 0x95, 0x7f, 0xea, 0x88, 0x2a,
	0xf3, 0xad, 0x17, 0x91, 0x80, 0x6e, 0x19, 0xa6, 0x77, 0x24, 0xc0, 0x32, 0xeb, 0xb6, 0xd3, 0xe7,
	0xdb, 0xd9, 0x01, 0x2a, 0xa4, 0xe8, 0xce, 0xdb, 0x17, 0xb4, 0x96, 0x55, 0x8c, 0xee, 0x9c, 0xa2,
	0xa4, 0x03, 0xe8, 0xf2, 0x43, 0x46, 0x3d, 0x63, 0xf0, 0x92, 0xb1, 0x6c, 0xc8, 0x3f, 0x07, 0xcf,
	0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x04, 0xd6, 0x0d, 0x3b, 0x2f, 0x08, 0x00, 0x00,
}
