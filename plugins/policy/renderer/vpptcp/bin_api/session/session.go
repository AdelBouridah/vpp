// Code generated by govpp binapi-generator DO NOT EDIT.
// Package session represents the VPP binary API of the 'session' VPP module.
// Generated from '/usr/share/vpp/api/session.api.json'
package session

import "git.fd.io/govpp.git/api"

// ApplicationAttach represents the VPP binary API message 'application_attach'.
//
type ApplicationAttach struct {
	InitialSegmentSize uint32
	Options            []uint64 `struc:"[16]uint64"`
	NamespaceIDLen     uint8
	NamespaceID        []byte `struc:"[64]byte"`
}

func (*ApplicationAttach) GetMessageName() string {
	return "application_attach"
}
func (*ApplicationAttach) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ApplicationAttach) GetCrcString() string {
	return "f27e0a47"
}
func NewApplicationAttach() api.Message {
	return &ApplicationAttach{}
}

// ApplicationAttachReply represents the VPP binary API message 'application_attach_reply'.
//
type ApplicationAttachReply struct {
	Retval               int32
	AppEventQueueAddress uint64
	SegmentSize          uint32
	SegmentNameLength    uint8
	SegmentName          []byte `struc:"[128]byte"`
}

func (*ApplicationAttachReply) GetMessageName() string {
	return "application_attach_reply"
}
func (*ApplicationAttachReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ApplicationAttachReply) GetCrcString() string {
	return "0df5c138"
}
func NewApplicationAttachReply() api.Message {
	return &ApplicationAttachReply{}
}

// ApplicationDetach represents the VPP binary API message 'application_detach'.
//
type ApplicationDetach struct {
}

func (*ApplicationDetach) GetMessageName() string {
	return "application_detach"
}
func (*ApplicationDetach) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ApplicationDetach) GetCrcString() string {
	return "bf7e4352"
}
func NewApplicationDetach() api.Message {
	return &ApplicationDetach{}
}

// ApplicationDetachReply represents the VPP binary API message 'application_detach_reply'.
//
type ApplicationDetachReply struct {
	Retval int32
}

func (*ApplicationDetachReply) GetMessageName() string {
	return "application_detach_reply"
}
func (*ApplicationDetachReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ApplicationDetachReply) GetCrcString() string {
	return "fb879289"
}
func NewApplicationDetachReply() api.Message {
	return &ApplicationDetachReply{}
}

// MapAnotherSegment represents the VPP binary API message 'map_another_segment'.
//
type MapAnotherSegment struct {
	SegmentSize uint32
	SegmentName []byte `struc:"[128]byte"`
}

func (*MapAnotherSegment) GetMessageName() string {
	return "map_another_segment"
}
func (*MapAnotherSegment) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MapAnotherSegment) GetCrcString() string {
	return "28ca2003"
}
func NewMapAnotherSegment() api.Message {
	return &MapAnotherSegment{}
}

// MapAnotherSegmentReply represents the VPP binary API message 'map_another_segment_reply'.
//
type MapAnotherSegmentReply struct {
	Retval int32
}

func (*MapAnotherSegmentReply) GetMessageName() string {
	return "map_another_segment_reply"
}
func (*MapAnotherSegmentReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*MapAnotherSegmentReply) GetCrcString() string {
	return "76d11a9d"
}
func NewMapAnotherSegmentReply() api.Message {
	return &MapAnotherSegmentReply{}
}

// BindURI represents the VPP binary API message 'bind_uri'.
//
type BindURI struct {
	AcceptCookie uint32
	URI          []byte `struc:"[128]byte"`
}

func (*BindURI) GetMessageName() string {
	return "bind_uri"
}
func (*BindURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*BindURI) GetCrcString() string {
	return "ceafed7f"
}
func NewBindURI() api.Message {
	return &BindURI{}
}

// BindURIReply represents the VPP binary API message 'bind_uri_reply'.
//
type BindURIReply struct {
	Retval int32
}

func (*BindURIReply) GetMessageName() string {
	return "bind_uri_reply"
}
func (*BindURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*BindURIReply) GetCrcString() string {
	return "75918978"
}
func NewBindURIReply() api.Message {
	return &BindURIReply{}
}

// UnbindURI represents the VPP binary API message 'unbind_uri'.
//
type UnbindURI struct {
	URI []byte `struc:"[128]byte"`
}

func (*UnbindURI) GetMessageName() string {
	return "unbind_uri"
}
func (*UnbindURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*UnbindURI) GetCrcString() string {
	return "46569743"
}
func NewUnbindURI() api.Message {
	return &UnbindURI{}
}

// UnbindURIReply represents the VPP binary API message 'unbind_uri_reply'.
//
type UnbindURIReply struct {
	Retval int32
}

func (*UnbindURIReply) GetMessageName() string {
	return "unbind_uri_reply"
}
func (*UnbindURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*UnbindURIReply) GetCrcString() string {
	return "310db78f"
}
func NewUnbindURIReply() api.Message {
	return &UnbindURIReply{}
}

// ConnectURI represents the VPP binary API message 'connect_uri'.
//
type ConnectURI struct {
	ClientQueueAddress uint64
	Options            []uint64 `struc:"[16]uint64"`
	URI                []byte   `struc:"[128]byte"`
}

func (*ConnectURI) GetMessageName() string {
	return "connect_uri"
}
func (*ConnectURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ConnectURI) GetCrcString() string {
	return "72035237"
}
func NewConnectURI() api.Message {
	return &ConnectURI{}
}

// ConnectURIReply represents the VPP binary API message 'connect_uri_reply'.
//
type ConnectURIReply struct {
	Retval int32
}

func (*ConnectURIReply) GetMessageName() string {
	return "connect_uri_reply"
}
func (*ConnectURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ConnectURIReply) GetCrcString() string {
	return "54ec1256"
}
func NewConnectURIReply() api.Message {
	return &ConnectURIReply{}
}

// AcceptSession represents the VPP binary API message 'accept_session'.
//
type AcceptSession struct {
	ListenerHandle       uint64
	Handle               uint64
	ServerRxFifo         uint64
	ServerTxFifo         uint64
	VppEventQueueAddress uint64
	Port                 uint16
	IsIP4                uint8
	IP                   []byte `struc:"[16]byte"`
}

func (*AcceptSession) GetMessageName() string {
	return "accept_session"
}
func (*AcceptSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AcceptSession) GetCrcString() string {
	return "8e2a127e"
}
func NewAcceptSession() api.Message {
	return &AcceptSession{}
}

// AcceptSessionReply represents the VPP binary API message 'accept_session_reply'.
//
type AcceptSessionReply struct {
	Retval int32
	Handle uint64
}

func (*AcceptSessionReply) GetMessageName() string {
	return "accept_session_reply"
}
func (*AcceptSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AcceptSessionReply) GetCrcString() string {
	return "67d8c22a"
}
func NewAcceptSessionReply() api.Message {
	return &AcceptSessionReply{}
}

// DisconnectSession represents the VPP binary API message 'disconnect_session'.
//
type DisconnectSession struct {
	Handle uint64
}

func (*DisconnectSession) GetMessageName() string {
	return "disconnect_session"
}
func (*DisconnectSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*DisconnectSession) GetCrcString() string {
	return "18addf61"
}
func NewDisconnectSession() api.Message {
	return &DisconnectSession{}
}

// DisconnectSessionReply represents the VPP binary API message 'disconnect_session_reply'.
//
type DisconnectSessionReply struct {
	Retval int32
	Handle uint64
}

func (*DisconnectSessionReply) GetMessageName() string {
	return "disconnect_session_reply"
}
func (*DisconnectSessionReply) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*DisconnectSessionReply) GetCrcString() string {
	return "6fb16b8f"
}
func NewDisconnectSessionReply() api.Message {
	return &DisconnectSessionReply{}
}

// ResetSession represents the VPP binary API message 'reset_session'.
//
type ResetSession struct {
	Handle uint64
}

func (*ResetSession) GetMessageName() string {
	return "reset_session"
}
func (*ResetSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ResetSession) GetCrcString() string {
	return "601fefd7"
}
func NewResetSession() api.Message {
	return &ResetSession{}
}

// ResetSessionReply represents the VPP binary API message 'reset_session_reply'.
//
type ResetSessionReply struct {
	Retval int32
	Handle uint64
}

func (*ResetSessionReply) GetMessageName() string {
	return "reset_session_reply"
}
func (*ResetSessionReply) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ResetSessionReply) GetCrcString() string {
	return "80f6c14f"
}
func NewResetSessionReply() api.Message {
	return &ResetSessionReply{}
}

// BindSock represents the VPP binary API message 'bind_sock'.
//
type BindSock struct {
	Vrf     uint32
	IsIP4   uint8
	IP      []byte `struc:"[16]byte"`
	Port    uint16
	Proto   uint8
	Options []uint64 `struc:"[16]uint64"`
}

func (*BindSock) GetMessageName() string {
	return "bind_sock"
}
func (*BindSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*BindSock) GetCrcString() string {
	return "3f898291"
}
func NewBindSock() api.Message {
	return &BindSock{}
}

// UnbindSock represents the VPP binary API message 'unbind_sock'.
//
type UnbindSock struct {
	Handle uint64
}

func (*UnbindSock) GetMessageName() string {
	return "unbind_sock"
}
func (*UnbindSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*UnbindSock) GetCrcString() string {
	return "9007c8c9"
}
func NewUnbindSock() api.Message {
	return &UnbindSock{}
}

// UnbindSockReply represents the VPP binary API message 'unbind_sock_reply'.
//
type UnbindSockReply struct {
	Retval int32
}

func (*UnbindSockReply) GetMessageName() string {
	return "unbind_sock_reply"
}
func (*UnbindSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*UnbindSockReply) GetCrcString() string {
	return "5d9c5da6"
}
func NewUnbindSockReply() api.Message {
	return &UnbindSockReply{}
}

// ConnectSock represents the VPP binary API message 'connect_sock'.
//
type ConnectSock struct {
	ClientQueueAddress uint64
	Options            []uint64 `struc:"[16]uint64"`
	Vrf                uint32
	IsIP4              uint8
	IP                 []byte `struc:"[16]byte"`
	Port               uint16
	Proto              uint8
}

func (*ConnectSock) GetMessageName() string {
	return "connect_sock"
}
func (*ConnectSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ConnectSock) GetCrcString() string {
	return "0bf00e15"
}
func NewConnectSock() api.Message {
	return &ConnectSock{}
}

// ConnectSockReply represents the VPP binary API message 'connect_sock_reply'.
//
type ConnectSockReply struct {
	Retval int32
}

func (*ConnectSockReply) GetMessageName() string {
	return "connect_sock_reply"
}
func (*ConnectSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ConnectSockReply) GetCrcString() string {
	return "f6988664"
}
func NewConnectSockReply() api.Message {
	return &ConnectSockReply{}
}

// BindSockReply represents the VPP binary API message 'bind_sock_reply'.
//
type BindSockReply struct {
	Handle                  uint64
	Retval                  int32
	ServerEventQueueAddress uint64
	LclIsIP4                uint8
	LclIP                   []byte `struc:"[16]byte"`
	LclPort                 uint16
	SegmentSize             uint32
	SegmentNameLength       uint8
	SegmentName             []byte `struc:"[128]byte"`
}

func (*BindSockReply) GetMessageName() string {
	return "bind_sock_reply"
}
func (*BindSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*BindSockReply) GetCrcString() string {
	return "6baf1ff2"
}
func NewBindSockReply() api.Message {
	return &BindSockReply{}
}

// ConnectSession represents the VPP binary API message 'connect_session'.
//
type ConnectSession struct {
}

func (*ConnectSession) GetMessageName() string {
	return "connect_session"
}
func (*ConnectSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ConnectSession) GetCrcString() string {
	return "40ae01d1"
}
func NewConnectSession() api.Message {
	return &ConnectSession{}
}

// ConnectSessionReply represents the VPP binary API message 'connect_session_reply'.
//
type ConnectSessionReply struct {
	Retval               int32
	Handle               uint64
	ServerRxFifo         uint64
	ServerTxFifo         uint64
	VppEventQueueAddress uint64
	SegmentSize          uint32
	SegmentNameLength    uint8
	SegmentName          []byte `struc:"[128]byte"`
	LclIP                []byte `struc:"[16]byte"`
	IsIP4                uint8
	LclPort              uint16
}

func (*ConnectSessionReply) GetMessageName() string {
	return "connect_session_reply"
}
func (*ConnectSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ConnectSessionReply) GetCrcString() string {
	return "0bf3fdc2"
}
func NewConnectSessionReply() api.Message {
	return &ConnectSessionReply{}
}

// SessionEnableDisable represents the VPP binary API message 'session_enable_disable'.
//
type SessionEnableDisable struct {
	IsEnable uint8
}

func (*SessionEnableDisable) GetMessageName() string {
	return "session_enable_disable"
}
func (*SessionEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SessionEnableDisable) GetCrcString() string {
	return "a4cfced4"
}
func NewSessionEnableDisable() api.Message {
	return &SessionEnableDisable{}
}

// SessionEnableDisableReply represents the VPP binary API message 'session_enable_disable_reply'.
//
type SessionEnableDisableReply struct {
	Retval int32
}

func (*SessionEnableDisableReply) GetMessageName() string {
	return "session_enable_disable_reply"
}
func (*SessionEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SessionEnableDisableReply) GetCrcString() string {
	return "cfb0e390"
}
func NewSessionEnableDisableReply() api.Message {
	return &SessionEnableDisableReply{}
}

// AppNamespaceAddDel represents the VPP binary API message 'app_namespace_add_del'.
//
type AppNamespaceAddDel struct {
	Secret         uint64
	SwIfIndex      uint32
	IP4FibID       uint32
	IP6FibID       uint32
	NamespaceIDLen uint8
	NamespaceID    []byte `struc:"[64]byte"`
}

func (*AppNamespaceAddDel) GetMessageName() string {
	return "app_namespace_add_del"
}
func (*AppNamespaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AppNamespaceAddDel) GetCrcString() string {
	return "9733ef2a"
}
func NewAppNamespaceAddDel() api.Message {
	return &AppNamespaceAddDel{}
}

// AppNamespaceAddDelReply represents the VPP binary API message 'app_namespace_add_del_reply'.
//
type AppNamespaceAddDelReply struct {
	Retval     int32
	AppnsIndex uint32
}

func (*AppNamespaceAddDelReply) GetMessageName() string {
	return "app_namespace_add_del_reply"
}
func (*AppNamespaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AppNamespaceAddDelReply) GetCrcString() string {
	return "8a5cd4ac"
}
func NewAppNamespaceAddDelReply() api.Message {
	return &AppNamespaceAddDelReply{}
}

// SessionRuleAddDel represents the VPP binary API message 'session_rule_add_del'.
//
type SessionRuleAddDel struct {
	TransportProto uint8
	IsIP4          uint8
	LclIP          []byte `struc:"[16]byte"`
	LclPlen        uint8
	RmtIP          []byte `struc:"[16]byte"`
	RmtPlen        uint8
	LclPort        uint16
	RmtPort        uint16
	ActionIndex    uint32
	IsAdd          uint8
	AppnsIndex     uint32
	Scope          uint8
	Tag            []byte `struc:"[64]byte"`
}

func (*SessionRuleAddDel) GetMessageName() string {
	return "session_rule_add_del"
}
func (*SessionRuleAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SessionRuleAddDel) GetCrcString() string {
	return "f540e6fb"
}
func NewSessionRuleAddDel() api.Message {
	return &SessionRuleAddDel{}
}

// SessionRuleAddDelReply represents the VPP binary API message 'session_rule_add_del_reply'.
//
type SessionRuleAddDelReply struct {
	Retval int32
}

func (*SessionRuleAddDelReply) GetMessageName() string {
	return "session_rule_add_del_reply"
}
func (*SessionRuleAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SessionRuleAddDelReply) GetCrcString() string {
	return "a000e586"
}
func NewSessionRuleAddDelReply() api.Message {
	return &SessionRuleAddDelReply{}
}

// SessionRulesDump represents the VPP binary API message 'session_rules_dump'.
//
type SessionRulesDump struct {
}

func (*SessionRulesDump) GetMessageName() string {
	return "session_rules_dump"
}
func (*SessionRulesDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SessionRulesDump) GetCrcString() string {
	return "cb37054a"
}
func NewSessionRulesDump() api.Message {
	return &SessionRulesDump{}
}

// SessionRulesDetails represents the VPP binary API message 'session_rules_details'.
//
type SessionRulesDetails struct {
	TransportProto uint8
	IsIP4          uint8
	LclIP          []byte `struc:"[16]byte"`
	LclPlen        uint8
	RmtIP          []byte `struc:"[16]byte"`
	RmtPlen        uint8
	LclPort        uint16
	RmtPort        uint16
	ActionIndex    uint32
	AppnsIndex     uint32
	Scope          uint8
	Tag            []byte `struc:"[64]byte"`
}

func (*SessionRulesDetails) GetMessageName() string {
	return "session_rules_details"
}
func (*SessionRulesDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SessionRulesDetails) GetCrcString() string {
	return "081d0d82"
}
func NewSessionRulesDetails() api.Message {
	return &SessionRulesDetails{}
}
